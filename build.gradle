apply plugin: 'com.github.ben-manes.versions'
apply plugin: 'com.vanniktech.code.quality.tools'
apply plugin: 'com.vanniktech.android.junit.jacoco'

buildscript {
  ext.versions = [
    kotlin: '1.1.51',
    minSdk: 9,
    targetSdk: 26,
    compileSdk: 26,
    lint: '26.0.0',
  ]

  ext.deps = [
    'kotlin': [
      'stdlib': "org.jetbrains.kotlin:kotlin-stdlib-jre7:${versions.kotlin}",
    ],
    'test': [
      'festassert': "org.easytesting:fest-assert-core:2.0M10",
    ],
    'lint': [
      'core': "com.android.tools.lint:lint:${versions.lint}",
      'api': "com.android.tools.lint:lint-api:${versions.lint}",
      'checks': "com.android.tools.lint:lint-checks:${versions.lint}",
      'tests': "com.android.tools.lint:lint-tests:${versions.lint}",
    ],
  ]

  repositories {
    mavenCentral()
    jcenter()
    google()
  }
  dependencies {
    classpath 'com.vanniktech:gradle-android-junit-jacoco-plugin:0.10.0'
    classpath 'com.vanniktech:gradle-code-quality-tools-plugin:0.8.0'
    classpath 'com.android.tools.build:gradle:3.0.0'
    classpath 'com.github.ben-manes:gradle-versions-plugin:0.17.0'
    classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:${versions.kotlin}"
  }
}

codeQualityTools {
  checkstyle {
    toolVersion = '8.4'
  }
  pmd {
    toolVersion = '5.8.1'
  }
  ktlint {
    toolVersion = '0.12.0'
  }
  detekt {
    toolVersion = '1.0.0.RC5-3'
  }
  errorProne {
    toolVersion = '2.1.2'
  }
  cpd {
    ignoreFailures = true // Follow up separately.
  }
}

allprojects {
  repositories {
    mavenCentral()
    jcenter()
    google()
  }
}

task wrapper(type: Wrapper) {
  gradleVersion = '4.2.1'
  distributionType = Wrapper.DistributionType.ALL
}